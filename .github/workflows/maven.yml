# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
     
  build:
    runs-on: ubuntu-latest
    steps:
      
      # Setup the environment 
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Set up JDK 15
      uses: actions/setup-java@v1
      with:
        java-version: 15    
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2 
        
      # Compile the project    
    - name: Compile with Maven
      run: mvn -B compile --file pom.xml
    
      # Run JUnit tests
    - name: Test with JUnit
      run: mvn -B test --file pom.xml
      
      # Generate and deploy test report
    - name: Generate test report
      run: |
           mvn surefire-report:report-only
           mvn site -DgenerateReports=false     
    - name: Deploy test report
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: target/site
        destination_dir: test 
        
      # Generate and deploy Javadoc
    - name: Generate Javadoc
      run:  mvn javadoc:javadoc            	      
    - name: Deploy Javadoc	    
      uses: peaceiris/actions-gh-pages@v3	     
      with:	   
        github_token: ${{ secrets.GITHUB_TOKEN }}	        
        publish_dir: target/site/apidocs
        keep_files: true
        force_orphan: true
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        commit_message: "Automatic documentation deployment"
